services:
  mysql:
    image: mysql:5.7
    platform: linux/amd64
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: orders
      MYSQL_PASSWORD: root
    ports:
      - 3306:3306
    volumes:
      - .docker/mysql:/var/lib/mysql

  rabbitmq:
    image: rabbitmq:3.12-management
    platform: linux/amd64
    container_name: rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf

  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DB_USER: root
        DB_PASS: root
        DB_HOST: mysql
        DB_PORT: 3306
        DB_NAME: orders
    container_name: app
    depends_on:
      - mysql
      - rabbitmq
    environment:
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: root
      DB_PASS: root
      DB_NAME: orders
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
    ports:
      - 8000:8000 # HTTP
      - 50051:50051 # gRPC
      - 8080:8080 # GraphQL
    volumes:
      - ./.env:/app/.env
    command: >
      sh -c "
      sleep 10 &&
      migrate -path=internal/infra/database/migrations -database='mysql://$DB_USER:$DB_PASS@tcp($DB_HOST:$DB_PORT)/$DB_NAME' -verbose up &&
      ./app"